% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectral_matching.R
\name{spectral_matching}
\alias{spectral_matching}
\title{Spectral matching}
\usage{
spectral_matching(pa, xset, ra_thres_l = 0, ra_thres_t = 2, cores = 1,
  pol = "positive", ppm_tol_prod = 10, ppm_tol_prec = 5,
  score_thres = 0.6, out_dir = ".", topn = NA, db_name = NA,
  grp_peaklist = NA, library_db_pth = NA, instrument_types = NA,
  library_sources = c("massbank"))
}
\arguments{
\item{pa}{purityA object; Needs to be the same used for frag4feature function}

\item{xset}{xcms object; Needs to be the same used for frag4feature function}

\item{ra_thres_l}{numeric; Relative abundance threshold for library spectra}

\item{ra_thres_t}{numeric; Relative abundance threshold for target spectra
(Peaks below this RA threshold for each scan for both library and target will be excluded)}

\item{cores}{numeric; Number of cores to use}

\item{pol}{character = Polarity ['positive' or 'negative']}

\item{ppm_tol_prod}{numeric = ppm tolerance to match to product}

\item{ppm_tol_prec}{numeric = ppm tolerance to match to precursor}

\item{score_thres}{numeric = dot product cosine score threshold}

\item{out_dir}{character = Out directory for the SQLite result database}

\item{topn}{numeric = [optional] only use top n matches}

\item{db_name}{character = [optional] Name of the result database}

\item{grp_peaklist}{dataframe =  [optional] can use any peak dataframe. Still needs to be derived from the xset object though
(e.g. can use CAMERA peaklist)}

\item{library_db_pth}{character = [optional] path to library spectral SQLite database. Defaults to msPurityData package data.}

\item{instrument_types}{vector = [optional] vector of instrument types, defaults to c('CE-ESI-TOF', 'ESI-ITFT', 'ESI-ITTOF', 'ESI-QTOF', 'LC-ESI-IT',
LC-ESI-ITFT', 'LC-ESI-ITTOF','LC-ESI-QFT', 'LC-ESI-QIT', 'LC-ESI-QQ', 'LC-ESI-QTOF', 'LC-ESI-TOF')}

\item{library_sources}{vector = [optional] vector of library sources. Default option is for massbank.}
}
\value{
path to SQLite database
}
\description{
Perform spectral matching to spectral libraries using dot product cosine on a LC-MS/MS dataset and link to XCMS features.
}
\examples{
msmsPths <- list.files(system.file("extdata", "lcms", "mzML", package="msPurityData"), full.names = TRUE, pattern = "MSMS")
xset <- xcms::xcmsSet(msmsPths, nSlaves = 1)
xset <- xcms::group(xset)
xset <- xcms::retcor(xset)
xset <- xcms::group(xset)

pa  <- purityA(msmsPths, interpol = "linear")
pa <- frag4feature(pa, xset)
result_pth <- spectral_matching(pa, xset)
}
