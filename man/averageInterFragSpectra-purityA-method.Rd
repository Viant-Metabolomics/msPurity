% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/purityA-av-spectra.R
\docType{methods}
\name{averageInterFragSpectra,purityA-method}
\alias{averageInterFragSpectra,purityA-method}
\alias{averageInterFragSpectra}
\title{Average and filter fragmentation spectra for each XCMS feature across MS data files}
\usage{
\S4method{averageInterFragSpectra}{purityA}(pa, minfrac = 0.5,
  minnum = 1, ppm = 5, snr = 0, ra = 0, av = "median",
  sumi = TRUE, rmp = FALSE, cores = 1)
}
\arguments{
\item{pa}{object; purityA object}

\item{minfrac}{numeric; minimum ratio of the peak fraction (peak count / total peaks) across files}

\item{minnum}{numeric; minimum number of times peak is present across fragmentation spectra across files}

\item{ppm}{numeric; ppm threshold to average across files}

\item{snr}{numeric; minimum signal-to-noise of the peak across files}

\item{ra}{numeric; minimum relative abundance of the peak across files}

\item{av}{character; type of averaging to use (median or mean)}

\item{sumi}{boolean; TRUE if the intensity for each peak is summed across averaged spectra}

\item{rmp}{boolean; RUE if peaks are to be removed that do not meet the threshold criteria. Otherwise they will just be flagged}

\item{cores}{numeric; Number of cores for multiprocessing}
}
\description{
Average and filter fragmentation spectra for each XCMS feature accross MS data files.

The default approach is to use hierarchical clustering where peaks within a set ppm tolerance will be clustered.

The clustered peaks are then averaged (or summed) and filtered.
}
\examples{

msmsPths <- list.files(system.file("extdata", "lcms", "mzML", package="msPurityData"), full.names = TRUE, pattern = "MSMS")
xset <- xcms::xcmsSet(msmsPths, nSlaves = 1)
xset <- xcms::group(xset)
xset <- xcms::retcor(xset)
xset <- xcms::group(xset)

pa  <- purityA(msmsPths, interpol = "linear")
pa <- frag4feature(pa, xset)
pa <- averageIntraFragSpectra(pa)
pa <- averageInterFragSpectra(pa)

}
